{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","setMovies","setQuery","useState","setMovie","isError","setIsError","isLoading","setIsLoading","getMovieData","enteredQuery","a","response","movieData","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","event","target","classNames","onClick","preventDefault","disabled","movieInfo","some","undefined","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f50f065.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=483dd28e';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n  query: string;\n  setQuery: React.Dispatch<React.SetStateAction<string>>;\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>;\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  movies, query, setMovies, setQuery,\n}) => {\n  const [movie, setMovie] = useState<Movie>();\n  const [isError, setIsError] = useState<ResponseError>();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const addMovie = (movieData: MovieData) => (setMovie({\n    title: movieData.Title,\n    description: movieData.Plot,\n    imgUrl: movieData.Poster === 'N/A'\n      ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n      : movieData.Poster,\n    imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n    imdbId: movieData.imdbID,\n  }));\n\n  const getMovieData = async (enteredQuery: string) => {\n    try {\n      setIsLoading(true);\n      const response = await getMovie(enteredQuery);\n\n      if ('Response' in response && response.Response === 'False') {\n        throw new Error(response.Error);\n      } else {\n        addMovie(response as MovieData);\n      }\n    } catch (error) {\n      setIsError(error as ResponseError);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const onAddMovie = (movieInfo: Movie) => {\n    const isAlreadyAdded = movies.some(\n      ({ imdbId }) => imdbId === movieInfo.imdbId,\n    );\n\n    if (isAlreadyAdded) {\n      return;\n    }\n\n    setMovies([...movies, movieInfo]);\n    setQuery('');\n    setMovie(undefined);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n              }}\n            />\n          </div>\n\n          <p className=\"help is-danger\" data-cy=\"errorMessage\">\n            {isError && 'There is no movie with such a title'}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light',\n                { 'is-loading': isLoading })}\n              onClick={(event) => {\n                event.preventDefault();\n                getMovieData(query);\n              }}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => onAddMovie(movie)}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport { Movie } from './types/Movie';\nimport { MoviesList } from './components/MoviesList';\n\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [query, setQuery] = useState('');\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          query={query}\n          setMovies={setMovies}\n          setQuery={setQuery}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}